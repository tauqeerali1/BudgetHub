{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context';\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = title => {\n  _s();\n\n  resetCategories();\n  const {\n    transactions\n  } = useContext(ExpenseTrackerContext);\n  const transactionsPerType = transactions.filter(t => t.type === title);\n  const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n  console.log({\n    transactionsPerType,\n    total,\n    categories\n  });\n  transactionsPerType.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(c => c.amount > 0);\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    total,\n    chartData\n  };\n};\n\n_s(useTransactions, \"Ni2LnfH2vyq3Bhy/VEUHhQfs92s=\");\n\nexport default useTransactions;","map":{"version":3,"sources":["/home/tauqeer/Downloads/budget/src/useTransactions.js"],"names":["useContext","ExpenseTrackerContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","transactions","transactionsPerType","filter","t","type","total","reduce","acc","currVal","amount","categories","console","log","forEach","category","find","c","filteredCategories","chartData","datasets","data","map","backgroundColor","color","labels"],"mappings":";;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,eAA9C,QAAqE,wBAArE;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/BF,EAAAA,eAAe;AACf,QAAM;AAAEG,IAAAA;AAAF,MAAmBP,UAAU,CAACC,qBAAD,CAAnC;AACA,QAAMO,mBAAmB,GAAGD,YAAY,CAACE,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWL,KAAtC,CAA5B;AACA,QAAMM,KAAK,GAAGJ,mBAAmB,CAACK,MAApB,CAA2B,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,IAAIC,OAAO,CAACC,MAA5D,EAAoE,CAApE,CAAd;AACA,QAAMC,UAAU,GAAGX,KAAK,KAAK,QAAV,GAAqBJ,gBAArB,GAAwCC,iBAA3D;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEX,IAAAA,mBAAF;AAAuBI,IAAAA,KAAvB;AAA8BK,IAAAA;AAA9B,GAAZ;AAEAT,EAAAA,mBAAmB,CAACY,OAApB,CAA6BV,CAAD,IAAO;AAC/B,UAAMW,QAAQ,GAAGJ,UAAU,CAACK,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACZ,IAAF,KAAWD,CAAC,CAACW,QAApC,CAAjB;AAEA,QAAGA,QAAH,EAAaA,QAAQ,CAACL,MAAT,IAAmBN,CAAC,CAACM,MAArB;AAChB,GAJD;AAMA,QAAMQ,kBAAkB,GAAGP,UAAU,CAACR,MAAX,CAAmBc,CAAD,IAAOA,CAAC,CAACP,MAAF,GAAW,CAApC,CAA3B;AAEA,QAAMS,SAAS,GAAG;AACdC,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,IAAI,EAAEH,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACP,MAAhC,CADG;AAETa,MAAAA,eAAe,EAAEL,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACO,KAAhC;AAFR,KAAD,CADI;AAKdC,IAAAA,MAAM,EAAEP,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACZ,IAAhC;AALM,GAAlB;AAQE,SAAO;AAAEC,IAAAA,KAAF;AAASa,IAAAA;AAAT,GAAP;AACL,CA1BD;;GAAMpB,e;;AA4BN,eAAeA,eAAf","sourcesContent":["import {useContext} from 'react';\nimport { ExpenseTrackerContext } from './context/context';\n\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\n\nconst useTransactions = (title) => {\n    resetCategories();\n    const { transactions } = useContext(ExpenseTrackerContext);\n    const transactionsPerType = transactions.filter((t) => t.type === title);\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n    console.log({ transactionsPerType, total, categories});\n\n    transactionsPerType.forEach((t) => {\n        const category = categories.find((c) => c.type === t.category)\n\n        if(category) category.amount += t.amount;\n    });\n\n    const filteredCategories = categories.filter((c) => c.amount > 0);\n\n    const chartData = {\n        datasets: [{\n          data: filteredCategories.map((c) => c.amount),\n          backgroundColor: filteredCategories.map((c) => c.color)\n        }],\n        labels: filteredCategories.map((c) => c.type)\n      };\n    \n      return { total, chartData };\n}\n\nexport default useTransactions;"]},"metadata":{},"sourceType":"module"}