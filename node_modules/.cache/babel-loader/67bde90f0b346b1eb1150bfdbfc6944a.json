{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1-lts\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\n\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\n\n\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1; // Get common ancestor container\n\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  var element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\n\n\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\n\n\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\n\n\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\n\n\nfunction getBoundingClientRect(element) {\n  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\n\n\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  var parentNode = getParentNode(element);\n\n  if (!parentNode) {\n    return false;\n  }\n\n  return isFixed(parentNode);\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  var el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\n\n\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width * height;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\n\n\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\n\n\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0]; // Get popper node sizes\n\n  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  }; // depending by the popper placement we have to compute its offsets slightly differently\n\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  } // use `filter` to obtain the same behavior of `find`\n\n\n  return arr.filter(check)[0];\n}\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\n\n\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\n\n\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  }; // compute reference element offsets\n\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n\n\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\n\n\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\n\n\nfunction destroy() {\n  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n\n  return this;\n}\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\n\n\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n\n  scrollParents.push(target);\n}\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  }); // Scroll event listener on scroll parents\n\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\n\n\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  }); // Reset state\n\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\n\n\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\n\n\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n\n  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\n\n\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\n\n\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n\n  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n\n  var left = void 0,\n      top = void 0;\n\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  } // Attributes\n\n\n  var attributes = {\n    'x-placement': data.placement\n  }; // Update `data` attributes, styles and arrowStyles\n\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\n\n\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n\n  return isRequired;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction arrow(data, options) {\n  var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n  // top/left side\n\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n\n  return variation;\n}\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\n\n\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\nvar validPlacements = placements.slice(3);\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\n\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries\n\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries\n\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\n\n\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2]; // If it's not a number it's an operator, I guess\n\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\n\n\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  }); // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  } // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n\n\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, []) // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  }); // Loop trough the offsets arrays and execute the operations\n\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  } // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n\n\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\n\n\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: offset,\n\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: arrow,\n\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: flip,\n\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\n\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n// Utils\n// Methods\n\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n    this.options = _extends({}, Popper.Defaults, options); // init state\n\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    }; // get reference and popper elements (allow jQuery wrappers)\n\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    }); // Refactoring modifiers' list (Object => Array)\n\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    }) // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    }); // fire the first update to position the popper in the right place\n\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  } // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;","map":{"version":3,"mappings":"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","names":["window","document","navigator","timeoutDuration","longerTimeoutBrowsers","i","length","isBrowser","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","createRange","range","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","descriptor","Object","value","enumerable","configurable","writable","obj","target","getClientRect","offsets","_extends","right","left","bottom","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","key","area","sort","a","b","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","undefined","slice","forEach","console","warn","enabled","update","isDestroyed","instance","arrowStyles","attributes","flipped","options","positionFixed","flip","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","_ref","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","defineProperty","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Popper","_this","classCallCheck","requestAnimationFrame","debounce","bind","Defaults","jquery","createClass","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","global","PopperUtils"],"sources":["/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isBrowser.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/debounce.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isFunction.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getStyleComputedProperty.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getParentNode.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getScrollParent.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getReferenceNode.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isIE.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getOffsetParent.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isOffsetContainer.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getRoot.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/findCommonOffsetParent.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getScroll.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/includeScroll.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getBordersSize.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getWindowSizes.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getClientRect.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getBoundingClientRect.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getOffsetRectRelativeToArbitraryNode.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isFixed.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getFixedPositionOffsetParent.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getBoundaries.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/computeAutoPlacement.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getReferenceOffsets.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getOuterSizes.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getOppositePlacement.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getPopperOffsets.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/find.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/findIndex.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/runModifiers.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/update.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isModifierEnabled.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getSupportedPropertyName.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/destroy.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getWindow.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/setupEventListeners.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/enableEventListeners.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/removeEventListeners.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/disableEventListeners.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isNumeric.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/setStyles.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/setAttributes.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/applyStyle.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getRoundedOffsets.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/computeStyle.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/isModifierRequired.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/arrow.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/getOppositeVariation.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/placements.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/utils/clockwise.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/flip.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/keepTogether.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/offset.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/preventOverflow.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/shift.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/hide.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/inner.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/modifiers/index.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/methods/defaults.js","/home/tauqeer/Downloads/budget/node_modules/popper.js/src/index.js"],"sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]},"metadata":{},"sourceType":"module"}